# Created by Daniel Pfeifer <daniel@pfeifer-mail.de>
#
# Distributed under the Boost Software License, Version 1.0.
# See accompanying file LICENSE_1_0.txt or copy at
#   http://www.boost.org/LICENSE_1_0.txt

file(REMOVE_RECURSE "${CMAKE_BINARY_DIR}/forward")
file(MAKE_DIRECTORY "${CMAKE_BINARY_DIR}/forward")
include_directories("${CMAKE_BINARY_DIR}/forward")

function(forward_headers library)
  message(STATUS "Forwarding headers of 'boost::${library}'")
  set(path "${CMAKE_CURRENT_SOURCE_DIR}/libs/${library}/include")
  file(GLOB_RECURSE headers "${path}/*")
  foreach(file ${headers})
    file(RELATIVE_PATH relative "${path}" "${file}")
    set(target "${CMAKE_BINARY_DIR}/forward/${relative}")
    get_filename_component(directory "${target}" PATH)
    file(MAKE_DIRECTORY "${directory}")
    execute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink "${file}" "${target}")
  endforeach()
endfunction()

forward_headers(algorithm)
forward_headers(any)
forward_headers(array)
forward_headers(asio)
forward_headers(assign)
forward_headers(atomic)
forward_headers(bimap)
forward_headers(bind)
forward_headers(circular_buffer)
forward_headers(compatibility)
forward_headers(compose)
forward_headers(concept_check)
forward_headers(config)
forward_headers(container)
forward_headers(context)
forward_headers(conversion)
forward_headers(coroutine)
forward_headers(crc)
forward_headers(detail)
forward_headers(disjoint_sets)
forward_headers(dynamic_bitset)
forward_headers(exception)
forward_headers(flyweight)
forward_headers(foreach)
forward_headers(format)
forward_headers(function)
forward_headers(functional)
forward_headers(function_types)
forward_headers(fusion)
forward_headers(geometry)
forward_headers(gil)
forward_headers(graph)
forward_headers(graph_parallel)
forward_headers(heap)
forward_headers(icl)
forward_headers(integer)
forward_headers(interprocess)
forward_headers(intrusive)
forward_headers(io)
forward_headers(iostreams)
forward_headers(iterator)
forward_headers(lambda)
forward_headers(locale)
forward_headers(local_function)
forward_headers(lockfree)
forward_headers(log)
forward_headers(logic)
forward_headers(math)
forward_headers(move)
forward_headers(mpi)
forward_headers(mpl)
forward_headers(msm)
forward_headers(multi_array)
forward_headers(multi_index)
forward_headers(multiprecision)
forward_headers(numeric/conversion)
forward_headers(numeric/interval)
forward_headers(numeric/odeint)
forward_headers(numeric/ublas)
forward_headers(optional)
forward_headers(parameter)
forward_headers(phoenix)
forward_headers(polygon)
forward_headers(pool)
forward_headers(predef)
forward_headers(preprocessor)
forward_headers(property_map)
forward_headers(property_tree)
forward_headers(proto)
forward_headers(ptr_container)
forward_headers(random)
forward_headers(range)
forward_headers(ratio)
forward_headers(rational)
forward_headers(regex)
forward_headers(scope_exit)
forward_headers(serialization)
forward_headers(signals)
forward_headers(signals2)
forward_headers(smart_ptr)
forward_headers(statechart)
forward_headers(static_assert)
forward_headers(timer)
forward_headers(tokenizer)
forward_headers(tr1)
forward_headers(tti)
forward_headers(tuple)
forward_headers(type_erasure)
forward_headers(typeof)
forward_headers(type_traits)
forward_headers(units)
forward_headers(unordered)
forward_headers(utility)
forward_headers(uuid)
forward_headers(variant)
forward_headers(wave)
forward_headers(xpressive)


add_subdirectory(libs/accumulators)
#add_subdirectory(libs/algorithm)
#add_subdirectory(libs/any)
#add_subdirectory(libs/array)
#add_subdirectory(libs/asio)
#add_subdirectory(libs/assign)
#add_subdirectory(libs/atomic)
#add_subdirectory(libs/bimap)
#add_subdirectory(libs/bind)
add_subdirectory(libs/chrono)
#add_subdirectory(libs/circular_buffer)
#add_subdirectory(libs/compatibility)
#add_subdirectory(libs/compose)
#add_subdirectory(libs/concept_check)
#add_subdirectory(libs/config)
#add_subdirectory(libs/container)
#add_subdirectory(libs/context)
#add_subdirectory(libs/conversion)
#add_subdirectory(libs/coroutine)
#add_subdirectory(libs/crc)
add_subdirectory(libs/date_time)
#add_subdirectory(libs/detail)
#add_subdirectory(libs/disjoint_sets)
#add_subdirectory(libs/dynamic_bitset)
#add_subdirectory(libs/exception)
add_subdirectory(libs/filesystem)
#add_subdirectory(libs/flyweight)
#add_subdirectory(libs/foreach)
#add_subdirectory(libs/format)
#add_subdirectory(libs/function)
#add_subdirectory(libs/functional)
#add_subdirectory(libs/function_types)
#add_subdirectory(libs/fusion)
#add_subdirectory(libs/geometry)
#add_subdirectory(libs/gil)
#add_subdirectory(libs/graph)
#add_subdirectory(libs/graph_parallel)
#add_subdirectory(libs/heap)
#add_subdirectory(libs/icl)
#add_subdirectory(libs/integer)
#add_subdirectory(libs/interprocess)
#add_subdirectory(libs/intrusive)
#add_subdirectory(libs/io)
#add_subdirectory(libs/iostreams)
#add_subdirectory(libs/iterator)
#add_subdirectory(libs/lambda)
#add_subdirectory(libs/locale)
#add_subdirectory(libs/local_function)
#add_subdirectory(libs/lockfree)
#add_subdirectory(libs/log)
#add_subdirectory(libs/logic)
#add_subdirectory(libs/math)
#add_subdirectory(libs/move)
#add_subdirectory(libs/mpi)
#add_subdirectory(libs/mpl)
#add_subdirectory(libs/msm)
#add_subdirectory(libs/multi_array)
#add_subdirectory(libs/multi_index)
#add_subdirectory(libs/multiprecision)
#add_subdirectory(libs/numeric/conversion)
#add_subdirectory(libs/numeric/interval)
#add_subdirectory(libs/numeric/odeint)
#add_subdirectory(libs/numeric/ublas)
#add_subdirectory(libs/optional)
#add_subdirectory(libs/parameter)
#add_subdirectory(libs/phoenix)
#add_subdirectory(libs/polygon)
#add_subdirectory(libs/pool)
#add_subdirectory(libs/predef)
#add_subdirectory(libs/preprocessor)
add_subdirectory(libs/program_options)
#add_subdirectory(libs/property_map)
#add_subdirectory(libs/property_tree)
#add_subdirectory(libs/proto)
#add_subdirectory(libs/ptr_container)
add_subdirectory(libs/python)
#add_subdirectory(libs/random)
#add_subdirectory(libs/range)
#add_subdirectory(libs/ratio)
#add_subdirectory(libs/rational)
#add_subdirectory(libs/regex)
#add_subdirectory(libs/scope_exit)
#add_subdirectory(libs/serialization)
#add_subdirectory(libs/signals)
#add_subdirectory(libs/signals2)
#add_subdirectory(libs/smart_ptr)
add_subdirectory(libs/spirit)
#add_subdirectory(libs/statechart)
#add_subdirectory(libs/static_assert)
add_subdirectory(libs/system)
add_subdirectory(libs/test)
add_subdirectory(libs/thread)
#add_subdirectory(libs/timer)
#add_subdirectory(libs/tokenizer)
#add_subdirectory(libs/tr1)
#add_subdirectory(libs/tti)
#add_subdirectory(libs/tuple)
#add_subdirectory(libs/type_erasure)
#add_subdirectory(libs/typeof)
#add_subdirectory(libs/type_traits)
#add_subdirectory(libs/units)
#add_subdirectory(libs/unordered)
#add_subdirectory(libs/utility)
#add_subdirectory(libs/uuid)
#add_subdirectory(libs/variant)
#add_subdirectory(libs/wave)
#add_subdirectory(libs/xpressive)

#add_subdirectory(tools/auto_index)
#add_subdirectory(tools/boostbook)
#add_subdirectory(tools/inspect)
add_subdirectory(tools/quickbook)
